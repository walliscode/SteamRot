////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include "DisplayManager.h"
#include "EventFlags.h"
#include "SceneManager.h"
#include <SFML/Graphics.hpp>

#include <nlohmann/json.hpp>
using json = nlohmann::json;

class GameEngine {
private:
  ////////////////////////////////////////////////////////////
  // Member data
  ////////////////////////////////////////////////////////////
  DisplayManager m_displayManager;
  SceneManager m_scene_manager;

  size_t m_loop_number = 0;
  EventFlags m_event_flags{0};

  ////////////////////////////////////////////////////////////
  /// \brief Handle external user input
  ///
  ////////////////////////////////////////////////////////////
  void sUserInput();

  ////////////////////////////////////////////////////////////
  /// \brief Update all Systems
  ///
  ////////////////////////////////////////////////////////////
  void UpdateSystems();

  ////////////////////////////////////////////////////////////
  /// \brief Render Game Drwables
  ///
  ////////////////////////////////////////////////////////////

  void sRender();

  ////////////////////////////////////////////////////////////
  // class friends
  ////////////////////////////////////////////////////////////

  friend void to_json(json &j, const GameEngine &ge);

public:
  ////////////////////////////////////////////////////////////
  /// \brief Default constructor
  ///
  ////////////////////////////////////////////////////////////
  GameEngine();

  ////////////////////////////////////////////////////////////
  /// \brief Start up and Run the game engine
  ///
  ////////////////////////////////////////////////////////////
  void RunGame(size_t numLoops = 0, bool use_test_window = false);

  ////////////////////////////////////////////////////////////
  /// \brief Get the current loop number
  ///
  ////////////////////////////////////////////////////////////
  size_t getLoopNumber();

  ////////////////////////////////////////////////////////////
  /// \brief Run the simulation (the while loop for a given number)
  ///
  ////////////////////////////////////////////////////////////
  void RunSimulation(int loops);

  ////////////////////////////////////////////////////////////
  /// \brief Export simulation data to a json file for testing
  ///
  ////////////////////////////////////////////////////////////
  void ExportSimulationData(const std::string &file_name);
};

////////////////////////////////////////////////////////////
/// \brief to json functionality provided by nlohmann/json
///
////////////////////////////////////////////////////////////
void to_json(json &j, const GameEngine &ge);

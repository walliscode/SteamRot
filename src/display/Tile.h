////////////////////////////////////////////////////////////
// Preprocessor directives
////////////////////////////////////////////////////////////
#pragma once

////////////////////////////////////////////////////////////
// headers
////////////////////////////////////////////////////////////
#include <SFML/Graphics.hpp>
#include <memory>

namespace steamrot {
class Tile {
private:
  ////////////////////////////////////////////////////////////
  // data members
  ////////////////////////////////////////////////////////////
  sf::View m_view;
  std::shared_ptr<size_t> m_scene_id;

public:
  ////////////////////////////////////////////////////////////
  // |brief default constructor
  ////////////////////////////////////////////////////////////
  Tile(std::shared_ptr<size_t> scene_id = nullptr);

  ////////////////////////////////////////////////////////////
  // |brief Set the scene id
  ////////////////////////////////////////////////////////////
  void SetSceneId(std::shared_ptr<size_t> scene_id);

  ////////////////////////////////////////////////////////////
  // |brief Get the scene id
  ////////////////////////////////////////////////////////////
  const std::shared_ptr<size_t> GetSceneId() const;

  ////////////////////////////////////////////////////////////
  // |brief Get the view for setting the view in the window
  ////////////////////////////////////////////////////////////
  sf::View &GetView();
};

} // namespace steamrot

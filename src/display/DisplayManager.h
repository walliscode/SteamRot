////////////////////////////////////////////////////////////
// Preprocessor directives
////////////////////////////////////////////////////////////
#pragma once

////////////////////////////////////////////////////////////
// headers
////////////////////////////////////////////////////////////

#include "Session.h"
#include "TexturesPackage.h"
#include <SFML/Graphics.hpp>
#include <SFML/Graphics/RenderTexture.hpp>
#include <memory>
#include <nlohmann/json.hpp>

////////////////////////////////////////////////////////////
// namespaces/using
////////////////////////////////////////////////////////////

namespace steamrot {
class DisplayManager {
private:
  ////////////////////////////////////////////////////////////
  // members
  ////////////////////////////////////////////////////////////
  sf::RenderWindow &m_window;
  sf::Color m_background_color;
  std::array<std::shared_ptr<Session>, 5> m_sessions;
  std::shared_ptr<Session> m_active_session;

  sf::RenderTexture m_tile_overlay;
  /**
   * @brief Member: RenderTexture for UI layer
   */
  sf::RenderTexture m_ui_layer;

  /**
   * @brief Member: describes whether the title scene is active, turns off
   * tiling controls
   */
  bool m_title_scene_active{false};

  ////////////////////////////////////////////////////////////
  // Member: UIengine (for handling UI elements for tiles)
  ////////////////////////////////////////////////////////////
  // UIRenderLogic m_ui_engine;

public:
  ////////////////////////////////////////////////////////////
  // |brief default constructor
  ////////////////////////////////////////////////////////////
  DisplayManager();

  /////////////////////////////////////////////////
  /// @brief Constructor taking a reference to a RenderWindow
  ///
  /// @param window RenderWindow reference
  /////////////////////////////////////////////////
  DisplayManager(sf::RenderWindow &window);

  ////////////////////////////////////////////////////////////
  // |brief get render window object
  ////////////////////////////////////////////////////////////
  sf::RenderWindow &GetWindow();

  ////////////////////////////////////////////////////////////
  // |brief render/draw all textures to the window
  ////////////////////////////////////////////////////////////
  void Render(TexturesPackage &textures_package);

  /**
   * @brief Load tile (and session) configuration for just a title scene.
   */
  void LoadTitleSceneTiles(const uuids::uuid &title_scene_id);

  void LoadCraftingSceneTiles(const uuids::uuid &crafting_scene_id);
};
} // namespace steamrot

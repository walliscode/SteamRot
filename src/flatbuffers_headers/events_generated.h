// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_EVENTS_STEAMROT_H_
#define FLATBUFFERS_GENERATED_EVENTS_STEAMROT_H_

#include "flatbuffers/flatbuffers.h"

// Ensure the included flatbuffers.h is the same version as when this file was
// generated, otherwise it may not be compatible.
static_assert(FLATBUFFERS_VERSION_MAJOR == 25 &&
              FLATBUFFERS_VERSION_MINOR == 2 &&
              FLATBUFFERS_VERSION_REVISION == 10,
             "Non-compatible flatbuffers version included");

namespace steamrot {

enum EventType : uint64_t {
  EventType_EVENT_NONE = 1ULL,
  EventType_EVENT_TEST = 2ULL,
  EventType_EVENT_USER_INPUT = 4ULL,
  EventType_EVENT_CHANGE_SCENE = 8ULL,
  EventType_EVENT_QUIT_GAME = 16ULL,
  EventType_EVENT_TOGGLE_DROPDOWN = 32ULL,
  EventType_NONE = 0,
  EventType_ANY = 63ULL
};

inline const EventType (&EnumValuesEventType())[6] {
  static const EventType values[] = {
    EventType_EVENT_NONE,
    EventType_EVENT_TEST,
    EventType_EVENT_USER_INPUT,
    EventType_EVENT_CHANGE_SCENE,
    EventType_EVENT_QUIT_GAME,
    EventType_EVENT_TOGGLE_DROPDOWN
  };
  return values;
}

inline const char *EnumNameEventType(EventType e) {
  switch (e) {
    case EventType_EVENT_NONE: return "EVENT_NONE";
    case EventType_EVENT_TEST: return "EVENT_TEST";
    case EventType_EVENT_USER_INPUT: return "EVENT_USER_INPUT";
    case EventType_EVENT_CHANGE_SCENE: return "EVENT_CHANGE_SCENE";
    case EventType_EVENT_QUIT_GAME: return "EVENT_QUIT_GAME";
    case EventType_EVENT_TOGGLE_DROPDOWN: return "EVENT_TOGGLE_DROPDOWN";
    default: return "";
  }
}

}  // namespace steamrot

#endif  // FLATBUFFERS_GENERATED_EVENTS_STEAMROT_H_

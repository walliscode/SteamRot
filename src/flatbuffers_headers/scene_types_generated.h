// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_SCENETYPES_STEAMROT_H_
#define FLATBUFFERS_GENERATED_SCENETYPES_STEAMROT_H_

#include "flatbuffers/flatbuffers.h"

// Ensure the included flatbuffers.h is the same version as when this file was
// generated, otherwise it may not be compatible.
static_assert(FLATBUFFERS_VERSION_MAJOR == 25 &&
              FLATBUFFERS_VERSION_MINOR == 2 &&
              FLATBUFFERS_VERSION_REVISION == 10,
             "Non-compatible flatbuffers version included");

namespace steamrot {

enum SceneType : int8_t {
  SceneType_UNKNOWN = 0,
  SceneType_TEST = 1,
  SceneType_TITLE = 2,
  SceneType_CRAFTING = 3,
  SceneType_MIN = SceneType_UNKNOWN,
  SceneType_MAX = SceneType_CRAFTING
};

inline const SceneType (&EnumValuesSceneType())[4] {
  static const SceneType values[] = {
    SceneType_UNKNOWN,
    SceneType_TEST,
    SceneType_TITLE,
    SceneType_CRAFTING
  };
  return values;
}

inline const char * const *EnumNamesSceneType() {
  static const char * const names[5] = {
    "UNKNOWN",
    "TEST",
    "TITLE",
    "CRAFTING",
    nullptr
  };
  return names;
}

inline const char *EnumNameSceneType(SceneType e) {
  if (::flatbuffers::IsOutRange(e, SceneType_UNKNOWN, SceneType_CRAFTING)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNamesSceneType()[index];
}

}  // namespace steamrot

#endif  // FLATBUFFERS_GENERATED_SCENETYPES_STEAMROT_H_

////////////////////////////////////////////////////////////
// Preprocessor directives
////////////////////////////////////////////////////////////
#pragma once

////////////////////////////////////////////////////////////
// headers
////////////////////////////////////////////////////////////
#include <nlohmann/json.hpp>
#include <unordered_set>

namespace steamrot {

////////////////////////////////////////////////////////////
// |brief Class to check json files conform to schema
////////////////////////////////////////////////////////////
class SchemaChecker {
private:
  ////////////////////////////////////////////////////////////
  // member data
  ////////////////////////////////////////////////////////////
  nlohmann::json m_jsonSchema;
  std::unordered_set<std::string> valid_schema_keys{"fieldname", "type",
                                                    "children", "child"};
  std::unordered_set<std::string> valid_schema_types{"string", "number", "bool",
                                                     "array", "object"};

  ////////////////////////////////////////////////////////////
  // |brief recursively check json schema itself
  ////////////////////////////////////////////////////////////
  void ValidateJSONSchema(const nlohmann::json &schema);

  ////////////////////////////////////////////////////////////
  // |brief create json schema from passed through object
  ////////////////////////////////////////////////////////////
  void CreateJSONSchema(const nlohmann::json &schema);

  ////////////////////////////////////////////////////////////
  // |brief recursively check json file against schema
  ////////////////////////////////////////////////////////////
  void ValidateJSON(const nlohmann::json &game_data);

public:
  ////////////////////////////////////////////////////////////
  // |brief constructor taking in a json object
  ////////////////////////////////////////////////////////////
  SchemaChecker(nlohmann::json schema);

  ////////////////////////////////////////////////////////////
  // |brief checks provided json file based on stored schema
  ////////////////////////////////////////////////////////////
  void CheckJSON(nlohmann::json game_data);
};

} // namespace steamrot

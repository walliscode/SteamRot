////////////////////////////////////////////////////////////
// Preprocessor directives
////////////////////////////////////////////////////////////
#pragma once

////////////////////////////////////////////////////////////
// headers
////////////////////////////////////////////////////////////
#include <nlohmann/json.hpp>

////////////////////////////////////////////////////////////
// |brief Enum to provide schema choices
////////////////////////////////////////////////////////////
enum class SchemaType : int {
  kNoSchema = 0,
  kSceneSchema = 1,
};

////////////////////////////////////////////////////////////
// |brief Class to check json files conform to schema
////////////////////////////////////////////////////////////
class SchemaChecker {
private:
  ////////////////////////////////////////////////////////////
  // class data
  ////////////////////////////////////////////////////////////
  SchemaType m_schema_type;

public:
  ////////////////////////////////////////////////////////////
  // |brief Default constructor for class taking in enum choice
  ////////////////////////////////////////////////////////////
  SchemaChecker(SchemaType schema_type);

  ////////////////////////////////////////////////////////////
  // |brief checks provided json file based on stored enum value
  ////////////////////////////////////////////////////////////
  bool CheckJSON(nlohmann::json j);
};

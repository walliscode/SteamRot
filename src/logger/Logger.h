////////////////////////////////////////////////////////////
// Preprocessor directives
////////////////////////////////////////////////////////////
#pragma once

////////////////////////////////////////////////////////////
// headers
////////////////////////////////////////////////////////////
#include "spdlog/logger.h"
#include <memory>

class Logger {
private:
  ////////////////////////////////////////////////////////////
  // member data
  ////////////////////////////////////////////////////////////

  std::shared_ptr<spdlog::logger> m_logger;
  std::vector<spdlog::sink_ptr> sinks;

  ////////////////////////////////////////////////////////////
  // |brief creation and formatting of info sink
  ////////////////////////////////////////////////////////////
  void CreateInfoSink();

  ////////////////////////////////////////////////////////////
  // |brief creation and formatting of error sink
  ////////////////////////////////////////////////////////////
  void CreateErrorSink();

public:
  ////////////////////////////////////////////////////////////
  // |brief default constructor
  ////////////////////////////////////////////////////////////
  Logger(const std::string &logger_name);

  ////////////////////////////////////////////////////////////
  // |brief close out sinks/loggers
  ////////////////////////////////////////////////////////////
  void CloseLogger();
};

/////////////////////////////////////////////////
/// @file
/// @brief Declaration of the TitleScene class.
/////////////////////////////////////////////////

/////////////////////////////////////////////////
/// Preprocessor Directives
/////////////////////////////////////////////////
#pragma once

/////////////////////////////////////////////////
/// Headers
/////////////////////////////////////////////////
#include "GameContext.h"
#include "Scene.h"
namespace steamrot {

/////////////////////////////////////////////////
/// @class TitleScene
/// @brief Designed to handle the title screen of the game.
///
/////////////////////////////////////////////////
class TitleScene : public Scene {
  friend class SceneFactory;

public:
private:
  /////////////////////////////////////////////////
  /// @brief Constructor for the TitleScene class.
  ///
  /// @param pool_size [TODO:parameter]
  /// @param scene_data [TODO:parameter]
  /// @param id [TODO:parameter]
  /// @param game_context [TODO:parameter]
  /////////////////////////////////////////////////
  TitleScene(const size_t pool_size, const uuids::uuid &id,
             const GameContext game_context);

  /////////////////////////////////////////////////
  /// @brief Call rendering Logic for TitleScene
  /////////////////////////////////////////////////
  void sRender() override;

  /////////////////////////////////////////////////
  /// @brief Call movement Logic for TitleScene
  /////////////////////////////////////////////////
  void sMovement() override;

  /////////////////////////////////////////////////
  /// @brief Call collision Logic for TitleScene
  /////////////////////////////////////////////////
  void sCollision() override;

  /////////////////////////////////////////////////
  /// @brief Call action Logic for TitleScene
  /////////////////////////////////////////////////
  void sAction() override;
};
} // namespace steamrot

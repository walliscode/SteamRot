/////////////////////////////////////////////////
/// @file
/// @brief Declaration of the Fragment struct. No impplementation is needed
/////////////////////////////////////////////////

#pragma once

#include "fragments_generated.h"
#include <SFML/Graphics/ConvexShape.hpp>
#include <SFML/Graphics/Transform.hpp>
#include <SFML/Graphics/VertexArray.hpp>
#include <SFML/System/Vector2.hpp>
#include <vector>

namespace steamrot {
/////////////////////////////////////////////////
/// @class Fragment
/// @brief Contains the data for a Fragment in the Grimoire Machina.
///
/////////////////////////////////////////////////
struct Fragment {
  /////////////////////////////////////////////////
  /// @brief Fragment name
  /////////////////////////////////////////////////
  std::string m_name{"unnamed fragment"};

  /////////////////////////////////////////////////
  /// @brief Local positions of the Fragment's sockets
  /////////////////////////////////////////////////
  std::vector<sf::Vector2f> m_sockets;

  /////////////////////////////////////////////////
  /// @brief Global transform of the fragment
  /////////////////////////////////////////////////
  sf::Transform m_transform;

  /////////////////////////////////////////////////
  /// @brief Contains all the render overlays for this fragment, describing each
  /// possible view.
  /////////////////////////////////////////////////
  std::unordered_map<ViewDirection, sf::VertexArray> m_overlays;
};
} // namespace steamrot
